<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MvvmLib.Windows</name>
    </assembly>
    <members>
        <member name="T:MvvmLib.Navigation.BackRequestManager">
            <summary>
            Allows to show the title bar back button.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.BackRequestManager.Handle(Windows.UI.Xaml.Controls.Frame,System.Action)">
            <summary>
            Handles SystemNavigationManager back requested.
            </summary>
            <param name="frame">The frame</param>
            <param name="callback">Go back callback</param>
        </member>
        <member name="M:MvvmLib.Navigation.BackRequestManager.Unhandle">
            <summary>
            Unhandles SystemNavigationManager back requested.
            </summary>
        </member>
        <member name="T:MvvmLib.Navigation.BootstrapperBase">
            <summary>
            The Bootstrapper base class.
            </summary>
        </member>
        <member name="F:MvvmLib.Navigation.BootstrapperBase.logger">
            <summary>
            The bootstrapper logger.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.BootstrapperBase.CreateLogger">
            <summary>
            Creates the bootstrapper logger (DebugLogger by default)
            </summary>
            <returns>The logger to use</returns>
        </member>
        <member name="M:MvvmLib.Navigation.BootstrapperBase.RegisterRequiredTypes">
            <summary>
            Registers library services.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.BootstrapperBase.RegisterTypes">
            <summary>
            Registers application dependencies.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.BootstrapperBase.ConfigureServiceLocator">
            <summary>
            Configures the service locator (Microsoft Common Service Locator) if used.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.BootstrapperBase.CreateShell">
            <summary>
            Creates the Main Page of the application.
            </summary>
            <returns>The Main Page</returns>
        </member>
        <member name="M:MvvmLib.Navigation.BootstrapperBase.ConfigureNavigation(Windows.UI.Xaml.Controls.Page)">
            <summary>
            Configures the navigation with the main frame of the application.
            </summary>
            <param name="shell">The Main Page</param>
        </member>
        <member name="M:MvvmLib.Navigation.BootstrapperBase.SetViewModelFactory">
            <summary>
            Sets the View Model Factory.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.BootstrapperBase.InitializeShell(Windows.UI.Xaml.Controls.Page)">
            <summary>
            Sets the content of the Current Window or navigates with the frame/ navigation service.
            </summary>
            <param name="shell">The Main Page of the application</param>
        </member>
        <member name="M:MvvmLib.Navigation.BootstrapperBase.ActivateShell(Windows.UI.Xaml.Controls.Page)">
            <summary>
            Activates the Main Page.
            </summary>
            <param name="shell"></param>
        </member>
        <member name="M:MvvmLib.Navigation.BootstrapperBase.OnComplete">
            <summary>
            Called after the bootstrapper process ends.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.BootstrapperBase.Run">
            <summary>
            Runs the bootstrapper.
            </summary>
        </member>
        <member name="T:MvvmLib.Navigation.FrameFacade">
            <summary>
            A facade for the frame content control.
            </summary>
        </member>
        <member name="E:MvvmLib.Navigation.FrameFacade.Navigated">
            <summary>
            Invoked after page navigated. 
            </summary>
        </member>
        <member name="E:MvvmLib.Navigation.FrameFacade.Navigating">
            <summary>
            Invoked before page navigation.
            </summary>
        </member>
        <member name="E:MvvmLib.Navigation.FrameFacade.CanGoBackChanged">
            <summary>
            Invoked when the can go back value changed.
            </summary>
        </member>
        <member name="E:MvvmLib.Navigation.FrameFacade.CanGoForwardChanged">
            <summary>
            Invoked when can the go forward value changed.
            </summary>
        </member>
        <member name="P:MvvmLib.Navigation.FrameFacade.CanGoBack">
            <summary>
            Gets the value that indicates if the can go back.
            </summary>
        </member>
        <member name="P:MvvmLib.Navigation.FrameFacade.CanGoForward">
            <summary>
            Gets the value that indicates if the can go forward.
            </summary>
        </member>
        <member name="P:MvvmLib.Navigation.FrameFacade.Content">
            <summary>
            Gets the frame content.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.FrameFacade.#ctor(Windows.UI.Xaml.Controls.Frame)">
            <summary>
            Creates the frame facade.
            </summary>
            <param name="frame">The frame control</param>
        </member>
        <member name="M:MvvmLib.Navigation.FrameFacade.Navigate(System.Type)">
            <summary>
            Navigates to the page.
            </summary>
            <param name="sourcePageType">The page type</param>
        </member>
        <member name="M:MvvmLib.Navigation.FrameFacade.Navigate(System.Type,System.Object)">
            <summary>
            Navigates to the page.
            </summary>
            <param name="sourcePageType">The page type</param>
            <param name="parameter">The parameter</param>
        </member>
        <member name="M:MvvmLib.Navigation.FrameFacade.Navigate(System.Type,System.Object,Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo)">
            <summary>
            Navigates to the page.
            </summary>
            <param name="sourcePageType">The page type</param>
            <param name="parameter">The parameter</param>
            <param name="infoOverride">The navigation transition</param>
        </member>
        <member name="M:MvvmLib.Navigation.FrameFacade.GoBack">
            <summary>
            Navigates to previous entry.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.FrameFacade.GoBack(Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo)">
            <summary>
            Navigates to previous entry.
            </summary>
            <param name="infoOverride">The navigation transition</param>
        </member>
        <member name="M:MvvmLib.Navigation.FrameFacade.GoForward">
            <summary>
            Navigates to next entry.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.FrameFacade.GetNavigationState">
            <summary>
            Returns the navigation state string for App life cycle.
            </summary>
            <returns>The navigation state string</returns>
        </member>
        <member name="M:MvvmLib.Navigation.FrameFacade.SetNavigationState(System.String)">
            <summary>
            Restore the navigation with the navigation state.
            </summary>
            <param name="navigationState">The navigation state</param>
        </member>
        <member name="T:MvvmLib.Navigation.FrameNavigatedEventArgs">
            <summary>
            The frame navigated event class.
            </summary>
        </member>
        <member name="P:MvvmLib.Navigation.FrameNavigatedEventArgs.SourcePageType">
            <summary>
            The source page type.
            </summary>
        </member>
        <member name="P:MvvmLib.Navigation.FrameNavigatedEventArgs.Content">
            <summary>
            The content of the page.
            </summary>
        </member>
        <member name="P:MvvmLib.Navigation.FrameNavigatedEventArgs.Parameter">
            <summary>
            The parameter.
            </summary>
        </member>
        <member name="P:MvvmLib.Navigation.FrameNavigatedEventArgs.NavigationMode">
            <summary>
            The navigation mode.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.FrameNavigatedEventArgs.#ctor(System.Type,System.Object,System.Object,Windows.UI.Xaml.Navigation.NavigationMode)">
            <summary>
            Creates the frame navigated event class.
            </summary>
            <param name="sourcePageType">The source page type</param>
            <param name="content">The content of the page</param>
            <param name="parameter">The parameter</param>
            <param name="navigationMode">The navigation mode</param>
        </member>
        <member name="T:MvvmLib.Navigation.FrameNavigatingEventArgs">
            <summary>
            The frame navigating event class.
            </summary>
        </member>
        <member name="P:MvvmLib.Navigation.FrameNavigatingEventArgs.SourcePageType">
            <summary>
            The source page type.
            </summary>
        </member>
        <member name="P:MvvmLib.Navigation.FrameNavigatingEventArgs.Content">
            <summary>
            The content of the page.
            </summary>
        </member>
        <member name="P:MvvmLib.Navigation.FrameNavigatingEventArgs.Parameter">
            <summary>
            The parameter.
            </summary>
        </member>
        <member name="P:MvvmLib.Navigation.FrameNavigatingEventArgs.NavigationMode">
            <summary>
            The navigation mode.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.FrameNavigatingEventArgs.#ctor(System.Type,System.Object,Windows.UI.Xaml.Navigation.NavigationMode)">
            <summary>
            Creates the frame navigating event class.
            </summary>
            <param name="sourcePageType">The source page type</param>
            <param name="parameter">The parameter</param>
            <param name="navigationMode">The navigation mode</param>
        </member>
        <member name="T:MvvmLib.Navigation.FrameNavigationCanceledEventArgs">
            <summary>
            The frame navigation failed event class.
            </summary>
        </member>
        <member name="P:MvvmLib.Navigation.FrameNavigationCanceledEventArgs.Source">
            <summary>
            The source of cancelation.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.FrameNavigationCanceledEventArgs.#ctor(System.Object)">
            <summary>
            Creates the navigation failed event class.
            </summary>
            <param name="source">The source of cancelation</param>
        </member>
        <member name="T:MvvmLib.Navigation.FrameNavigationService">
            <summary>
            The main navigation service implementation. Allows to navigate, cancel navigation and notify view models with parameter.
            </summary>
        </member>
        <member name="E:MvvmLib.Navigation.FrameNavigationService.Navigated">
            <summary>
            Invoked after page navigated. 
            </summary>
        </member>
        <member name="E:MvvmLib.Navigation.FrameNavigationService.Navigating">
            <summary>
            Invoked before page navigation.
            </summary>
        </member>
        <member name="E:MvvmLib.Navigation.FrameNavigationService.CanGoBackChanged">
            <summary>
            Invoked when the can go back value changed.
            </summary>
        </member>
        <member name="E:MvvmLib.Navigation.FrameNavigationService.CanGoForwardChanged">
            <summary>
            Invoked when can the go forward value changed.
            </summary>
        </member>
        <member name="E:MvvmLib.Navigation.FrameNavigationService.NavigationCanceled">
            <summary>
            Invoked when the navigation is canceled.
            </summary>
        </member>
        <member name="P:MvvmLib.Navigation.FrameNavigationService.CanGoBack">
            <summary>
            Gets the value that indicates if the frame can go back.
            </summary>
        </member>
        <member name="P:MvvmLib.Navigation.FrameNavigationService.CanGoForward">
            <summary>
            Gets the value that indicates if the frame can go forward.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.FrameNavigationService.#ctor(MvvmLib.Navigation.IFrameFacade)">
            <summary>
            Creates the navigation service.
            </summary>
            <param name="frameFacade">The frame facade</param>
        </member>
        <member name="M:MvvmLib.Navigation.FrameNavigationService.GetNavigationState">
            <summary>
            Returns the navigation state string for App life cycle.
            </summary>
            <returns>The navigation state string</returns>
        </member>
        <member name="M:MvvmLib.Navigation.FrameNavigationService.SetNavigationState(System.String)">
            <summary>
            Restore the navigation with the navigation state.
            </summary>
            <param name="navigationState">The navigation state</param>
        </member>
        <member name="M:MvvmLib.Navigation.FrameNavigationService.Suspend">
            <summary>
            A method to call on application suspension to save states from current view model.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.FrameNavigationService.NavigateAsync(System.Type)">
            <summary>
            Navigates to the page.
            </summary>
            <param name="sourcePageType">The page type</param>
            <returns></returns>
        </member>
        <member name="M:MvvmLib.Navigation.FrameNavigationService.NavigateAsync(System.Type,System.Object)">
            <summary>
            Navigates to the page.
            </summary>
            <param name="sourcePageType">The page type</param>
            <param name="parameter">The parameter</param>
            <returns></returns>
        </member>
        <member name="M:MvvmLib.Navigation.FrameNavigationService.NavigateAsync(System.Type,System.Object,Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo)">
            <summary>
            Navigates to the page.
            </summary>
            <param name="sourcePageType">The page type</param>
            <param name="parameter">The parameter</param>
            <param name="infoOverride">The navigation transition</param>
            <returns></returns>
        </member>
        <member name="M:MvvmLib.Navigation.FrameNavigationService.GoBackAsync">
            <summary>
            Navigates to previous entry.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MvvmLib.Navigation.FrameNavigationService.GoBackAsync(Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo)">
            <summary>
            Navigates to previous entry.
            </summary>
            <param name="infoOverride">The navigation transition</param>
            <returns></returns>
        </member>
        <member name="M:MvvmLib.Navigation.FrameNavigationService.GoForwardAsync">
            <summary>
            Navigates to next entry.
            </summary>
            <returns></returns>
        </member>
        <member name="T:MvvmLib.Navigation.IBackRequestManager">
            <summary>
            The back request manager contract.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.IBackRequestManager.Handle(Windows.UI.Xaml.Controls.Frame,System.Action)">
            <summary>
            Handles SystemNavigationManager back requested.
            </summary>
            <param name="frame">The frame</param>
            <param name="callback">Go back callback</param>
        </member>
        <member name="M:MvvmLib.Navigation.IBackRequestManager.Unhandle">
            <summary>
            Unhandles SystemNavigationManager back requested.
            </summary>
        </member>
        <member name="T:MvvmLib.Navigation.IDeactivatable">
            <summary>
            Allows to cancel navigation from view model.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.IDeactivatable.CanDeactivateAsync">
            <summary>
            Checks if the navigation can continue.
            </summary>
            <returns>True to continue navigation</returns>
        </member>
        <member name="T:MvvmLib.Navigation.IFrameFacade">
            <summary>
            The frame facade contract.
            </summary>
        </member>
        <member name="P:MvvmLib.Navigation.IFrameFacade.CanGoBack">
            <summary>
            Gets the value that indicates if the can go back.
            </summary>
        </member>
        <member name="P:MvvmLib.Navigation.IFrameFacade.CanGoForward">
            <summary>
            Gets the value that indicates if the can go forward.
            </summary>
        </member>
        <member name="P:MvvmLib.Navigation.IFrameFacade.Content">
            <summary>
            Gets the frame content.
            </summary>
        </member>
        <member name="E:MvvmLib.Navigation.IFrameFacade.CanGoBackChanged">
            <summary>
            Invoked when the can go back value changed.
            </summary>
        </member>
        <member name="E:MvvmLib.Navigation.IFrameFacade.CanGoForwardChanged">
            <summary>
            Invoked when can the go forward value changed.
            </summary>
        </member>
        <member name="E:MvvmLib.Navigation.IFrameFacade.Navigated">
            <summary>
            Invoked after page navigated. 
            </summary>
        </member>
        <member name="E:MvvmLib.Navigation.IFrameFacade.Navigating">
            <summary>
            Invoked before page navigation.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.IFrameFacade.GetNavigationState">
            <summary>
            Returns the navigation state string for App life cycle.
            </summary>
            <returns>The navigation state string</returns>
        </member>
        <member name="M:MvvmLib.Navigation.IFrameFacade.GoBack">
            <summary>
            Navigates to previous entry.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.IFrameFacade.GoBack(Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo)">
            <summary>
            Navigates to previous entry.
            </summary>
            <param name="infoOverride">The navigation transition</param>
        </member>
        <member name="M:MvvmLib.Navigation.IFrameFacade.GoForward">
            <summary>
            Navigates to next entry.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.IFrameFacade.Navigate(System.Type)">
            <summary>
            Navigates to the page.
            </summary>
            <param name="sourcePageType">The page type</param>
        </member>
        <member name="M:MvvmLib.Navigation.IFrameFacade.Navigate(System.Type,System.Object)">
            <summary>
            Navigates to the page.
            </summary>
            <param name="sourcePageType">The page type</param>
            <param name="parameter">The parameter</param>
        </member>
        <member name="M:MvvmLib.Navigation.IFrameFacade.Navigate(System.Type,System.Object,Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo)">
            <summary>
            Navigates to the page.
            </summary>
            <param name="sourcePageType">The page type</param>
            <param name="parameter">The parameter</param>
            <param name="infoOverride">The navigation transition</param>
        </member>
        <member name="M:MvvmLib.Navigation.IFrameFacade.SetNavigationState(System.String)">
            <summary>
            Restore the navigation with the navigation state.
            </summary>
            <param name="navigationState">The navigation state</param>
        </member>
        <member name="T:MvvmLib.Navigation.IFrameNavigationService">
            <summary>
            The navigation service contract.
            </summary>
        </member>
        <member name="P:MvvmLib.Navigation.IFrameNavigationService.CanGoBack">
            <summary>
            Gets the value that indicates if the frame can go back.
            </summary>
        </member>
        <member name="P:MvvmLib.Navigation.IFrameNavigationService.CanGoForward">
            <summary>
            Gets the value that indicates if the frame can go forward.
            </summary>
        </member>
        <member name="E:MvvmLib.Navigation.IFrameNavigationService.CanGoBackChanged">
            <summary>
            Invoked when the can go back value changed.
            </summary>
        </member>
        <member name="E:MvvmLib.Navigation.IFrameNavigationService.CanGoForwardChanged">
            <summary>
            Invoked when can the go forward value changed.
            </summary>
        </member>
        <member name="E:MvvmLib.Navigation.IFrameNavigationService.Navigated">
            <summary>
            Invoked after page navigated. 
            </summary>
        </member>
        <member name="E:MvvmLib.Navigation.IFrameNavigationService.Navigating">
            <summary>
            Invoked before page navigation.
            </summary>
        </member>
        <member name="E:MvvmLib.Navigation.IFrameNavigationService.NavigationCanceled">
            <summary>
            Invoked when the navigation is canceled.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.IFrameNavigationService.GetNavigationState">
            <summary>
            Returns the navigation state string for App life cycle.
            </summary>
            <returns>The navigation state string</returns>
        </member>
        <member name="M:MvvmLib.Navigation.IFrameNavigationService.GoBackAsync">
            <summary>
            Navigates to previous entry.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MvvmLib.Navigation.IFrameNavigationService.GoBackAsync(Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo)">
            <summary>
            Navigates to previous entry.
            </summary>
            <param name="infoOverride">The navigation transition</param>
            <returns></returns>
        </member>
        <member name="M:MvvmLib.Navigation.IFrameNavigationService.GoForwardAsync">
            <summary>
            Navigates to next entry.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MvvmLib.Navigation.IFrameNavigationService.NavigateAsync(System.Type)">
            <summary>
            Navigates to the page.
            </summary>
            <param name="sourcePageType">The page type</param>
            <returns></returns>
        </member>
        <member name="M:MvvmLib.Navigation.IFrameNavigationService.NavigateAsync(System.Type,System.Object)">
            <summary>
            Navigates to the page.
            </summary>
            <param name="sourcePageType">The page type</param>
            <param name="parameter">The parameter</param>
            <returns></returns>
        </member>
        <member name="M:MvvmLib.Navigation.IFrameNavigationService.NavigateAsync(System.Type,System.Object,Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo)">
            <summary>
            Navigates to the page.
            </summary>
            <param name="sourcePageType">The page type</param>
            <param name="parameter">The parameter</param>
            <param name="infoOverride">The navigation transition</param>
            <returns></returns>
        </member>
        <member name="M:MvvmLib.Navigation.IFrameNavigationService.SetNavigationState(System.String)">
            <summary>
            Restore the navigation with the navigation state.
            </summary>
            <param name="navigationState">The navigation state</param>
        </member>
        <member name="M:MvvmLib.Navigation.IFrameNavigationService.Suspend">
            <summary>
            A method to call on application suspension to save states from current view model.
            </summary>
        </member>
        <member name="T:MvvmLib.Navigation.ILoadedEventListener">
            <summary>
            Allows to view model to be notifed when the view is loaded.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.ILoadedEventListener.OnLoaded">
            <summary>
            Invoked on loaded.
            </summary>
        </member>
        <member name="T:MvvmLib.Navigation.INavigatable">
            <summary>
            Allows to notify view model on navigate.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.INavigatable.OnNavigatedTo(System.Object,Windows.UI.Xaml.Navigation.NavigationMode)">
            <summary>
            Invoked after page navigated. 
            </summary>
            <param name="parameter">The parameter</param>
            <param name="navigationMode">The navigation mode</param>
        </member>
        <member name="M:MvvmLib.Navigation.INavigatable.OnNavigatingFrom(System.Boolean)">
            <summary>
            Invoked before page navigated. 
            </summary>
            <param name="isSuspending">Indicates if the application is suspending</param>
        </member>
        <member name="T:MvvmLib.Navigation.INavigationManager">
            <summary>
            The Navigation manager contract.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.INavigationManager.GetDefault">
            <summary>
            Returns the default navigation service.
            </summary>
            <returns>The navigation service</returns>
        </member>
        <member name="M:MvvmLib.Navigation.INavigationManager.GetNamed(System.String)">
            <summary>
            Returns the named navigation service.
            </summary>
            <param name="name">The name</param>
            <returns>The navigation service</returns>
        </member>
        <member name="T:MvvmLib.Navigation.INavigationParameters">
            <summary>
            A dictionary that allows to manage easily navigation parameters.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.INavigationParameters.Add(System.String,System.Object)">
            <summary>
            Adds a navigation parameter.
            </summary>
            <param name="key">The key</param>
            <param name="value">The value</param>
        </member>
        <member name="M:MvvmLib.Navigation.INavigationParameters.ContainsKey(System.String)">
            <summary>
            Checks if the key is already in use.
            </summary>
            <param name="key">The key</param>
            <returns>true if in use</returns>
        </member>
        <member name="P:MvvmLib.Navigation.INavigationParameters.Count">
            <summary>
            The dictionary elements count.
            </summary>
        </member>
        <member name="P:MvvmLib.Navigation.INavigationParameters.Keys">
            <summary>
            The keys.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.INavigationParameters.GetValue``1(System.String)">
            <summary>
            Gets the value of the navigation parameter.
            </summary>
            <typeparam name="T">The type</typeparam>
            <param name="key">The key</param>
            <returns>The value</returns>
        </member>
        <member name="M:MvvmLib.Navigation.INavigationParameters.GetValues``1(System.String)">
            <summary>
            Returns the values.
            </summary>
            <typeparam name="T">The type</typeparam>
            <param name="key">The key</param>
            <returns>The enumerable</returns>
        </member>
        <member name="M:MvvmLib.Navigation.INavigationParameters.TryGetValue``1(System.String,``0@)">
            <summary>
            Tries to get the parameter value for the key.
            </summary>
            <typeparam name="T">The type</typeparam>
            <param name="key">The key</param>
            <param name="value"></param>
            <returns>True if found</returns>
        </member>
        <member name="P:MvvmLib.Navigation.INavigationParameters.Item(System.String)">
            <summary>
            Returns the element with the key.
            </summary>
            <param name="key">The key</param>
            <returns>The element</returns>
        </member>
        <member name="M:MvvmLib.Navigation.INavigationParameters.Remove(System.String)">
            <summary>
            remove the navigation parameter.
            </summary>
            <param name="key">The key</param>
            <returns>true if removed</returns>
        </member>
        <member name="T:MvvmLib.Navigation.NavigationException">
            <summary>
            The navigation exception class.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.NavigationException.#ctor">
            <summary>
            Creates the exception.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.NavigationException.#ctor(System.String)">
            <summary>
            Creates the exception.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:MvvmLib.Navigation.NavigationException.#ctor(System.String,System.Exception)">
            <summary>
            Creates the exception.
            </summary>
            <param name="message">The message</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="T:MvvmLib.Navigation.NavigationManager">
            <summary>
            Allows to manage multiple navigation services of the application.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.NavigationManager.Register(Windows.UI.Xaml.Controls.Frame,System.String)">
            <summary>
            registers the frame with the name, creates and returns a navigation service.
            </summary>
            <param name="frame">The frame</param>
            <param name="name">The name</param>
            <returns>The navigation service</returns>
        </member>
        <member name="M:MvvmLib.Navigation.NavigationManager.Register(Windows.UI.Xaml.Controls.Frame)">
            <summary>
            registers the frame with the default name, creates and returns a navigation service.
            </summary>
            <param name="frame">The frame</param>
            <returns>The navigation service</returns>
        </member>
        <member name="M:MvvmLib.Navigation.NavigationManager.Unregister(System.String)">
            <summary>
            Remove the navigation service.
            </summary>
            <param name="name">The name</param>
            <returns>True if service is removed</returns>
        </member>
        <member name="M:MvvmLib.Navigation.NavigationManager.UnregisterDefault">
            <summary>
            Remove the navigation service.
            </summary>
            <returns>True if service is removed</returns>
        </member>
        <member name="M:MvvmLib.Navigation.NavigationManager.IsRegistered(System.String)">
            <summary>
            Checks if the named navigation service is registered.
            </summary>
            <param name="name">The name</param>
            <returns>True if registered</returns>
        </member>
        <member name="M:MvvmLib.Navigation.NavigationManager.IsRegistered">
            <summary>
            Checks if the default navigation service is registered.
            </summary>
            <returns>True if registered</returns>
        </member>
        <member name="M:MvvmLib.Navigation.NavigationManager.GetNamed(System.String)">
            <summary>
            Returns the named navigation service.
            </summary>
            <param name="name">The name</param>
            <returns>The navigation service</returns>
        </member>
        <member name="M:MvvmLib.Navigation.NavigationManager.GetDefault">
            <summary>
            Returns the default navigation service.
            </summary>
            <returns>The navigation service</returns>
        </member>
        <member name="T:MvvmLib.Navigation.NavigationParameters">
            <summary>
            A dictionary that allows to manage easily navigation parameters.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.NavigationParameters.#ctor(System.ValueTuple{System.String,System.Object}[])">
            <summary>
            Creates the navigation parameter dictionary.
            </summary>
            <param name="parameters">Tuples of Name and value</param>
        </member>
        <member name="P:MvvmLib.Navigation.NavigationParameters.Item(System.String)">
            <summary>
            Returns the element with the key.
            </summary>
            <param name="key">The key</param>
            <returns>The element</returns>
        </member>
        <member name="P:MvvmLib.Navigation.NavigationParameters.Count">
            <summary>
            The dictionary elements count.
            </summary>
        </member>
        <member name="P:MvvmLib.Navigation.NavigationParameters.Keys">
            <summary>
            The keys.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.NavigationParameters.Add(System.String,System.Object)">
            <summary>
            Adds a navigation parameter.
            </summary>
            <param name="key">The key</param>
            <param name="value">The value</param>
        </member>
        <member name="M:MvvmLib.Navigation.NavigationParameters.ContainsKey(System.String)">
            <summary>
            Checks if the key is already in use.
            </summary>
            <param name="key">The key</param>
            <returns>true if in use</returns>
        </member>
        <member name="M:MvvmLib.Navigation.NavigationParameters.GetEnumerator">
            <summary>
            Returns an enumerator.
            </summary>
            <returns>The enumerator</returns>
        </member>
        <member name="M:MvvmLib.Navigation.NavigationParameters.GetValue``1(System.String)">
            <summary>
            Gets the value of the navigation parameter.
            </summary>
            <typeparam name="T">The type</typeparam>
            <param name="key">The key</param>
            <returns>The value</returns>
        </member>
        <member name="M:MvvmLib.Navigation.NavigationParameters.GetValues``1(System.String)">
            <summary>
            Returns a enumerator.
            </summary>
            <typeparam name="T">The type</typeparam>
            <param name="key">The key</param>
            <returns>The enumerable</returns>
        </member>
        <member name="M:MvvmLib.Navigation.NavigationParameters.Remove(System.String)">
            <summary>
            remove the navigation parameter.
            </summary>
            <param name="key">The key</param>
            <returns>true if removed</returns>
        </member>
        <member name="M:MvvmLib.Navigation.NavigationParameters.ToString">
            <summary>
            A formetted string with keys and values.
            </summary>
            <returns>Navigation paremeters string</returns>
        </member>
        <member name="M:MvvmLib.Navigation.NavigationParameters.TryGetValue``1(System.String,``0@)">
            <summary>
            Tries to get the parameter value for the key.
            </summary>
            <typeparam name="T">The type</typeparam>
            <param name="key">The key</param>
            <param name="value"></param>
            <returns>True if found</returns>
        </member>
        <member name="M:MvvmLib.Navigation.NavigationParameters.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator.
            </summary>
            <returns>The enumerator</returns>
        </member>
        <member name="T:MvvmLib.Navigation.ViewModelLocationProvider">
            <summary>
            The ViewModelLocationProvider class locates the view model for the view.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.ViewModelLocationProvider.SetViewTypeToViewModelTypeResolver(System.Func{System.Type,System.Type})">
            <summary>
            Changes the default convention.
            </summary>
            <param name="viewTypeToViewModelTypeResolver">The new convention to use</param>
        </member>
        <member name="M:MvvmLib.Navigation.ViewModelLocationProvider.SetViewModelFactory(System.Func{System.Type,System.Object})">
            <summary>
            The view model factory receives a view model type and have to create an instance of the view model. It could uses a ioc container to create the instance and resolve view model dependences.
            </summary>
            <param name="viewModelFactory"></param>
        </member>
        <member name="M:MvvmLib.Navigation.ViewModelLocationProvider.ResolveViewModelType(System.Type)">
            <summary>
            Gets the view model type for the view type.
            </summary>
            <param name="viewType">The view type</param>
            <returns>The view model type</returns>
        </member>
        <member name="M:MvvmLib.Navigation.ViewModelLocationProvider.ResolveViewModel(System.Type)">
            <summary>
            Returns an instance of the view model type.
            </summary>
            <param name="viewModelType">The view model type</param>
            <returns>The instance</returns>
        </member>
        <member name="M:MvvmLib.Navigation.ViewModelLocationProvider.RegisterCustom(System.Type,System.Type)">
            <summary>
            Registers a ViewModelType for a ViewType.
            </summary>
            <param name="viewType">The view type</param>
            <param name="viewModelType">The view model type</param>
        </member>
        <member name="T:MvvmLib.Navigation.ViewModelLocator">
            <summary>
            ALlows to discover and bind the view model to  the view.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.ViewModelLocator.GetResolveViewModel(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Returns true if the view model have to be resolved.
            </summary>
            <param name="obj">The view</param>
            <returns>True or false</returns>
        </member>
        <member name="M:MvvmLib.Navigation.ViewModelLocator.SetResolveViewModel(Windows.UI.Xaml.DependencyObject,System.Boolean)">
            <summary>
            Sets if the view model have to be resolved.
            </summary>
            <param name="obj">The view</param>
            <param name="value">The new value</param>
        </member>
        <member name="F:MvvmLib.Navigation.ViewModelLocator.ResolveViewModelProperty">
            <summary>
            Allows to resolve the view model for the view.
            </summary>
        </member>
        <member name="M:MvvmLib.Navigation.ViewModelLocator.GetHandleLoaded(Windows.UI.Xaml.DependencyObject)">
            <summary>
            returns true if the view model have to be notified on view loaded
            </summary>
            <param name="obj">The view</param>
            <returns>True or false</returns>
        </member>
        <member name="M:MvvmLib.Navigation.ViewModelLocator.SetHandleLoaded(Windows.UI.Xaml.DependencyObject,System.Boolean)">
            <summary>
            Sets  if the view model have to be notified on view loaded
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:MvvmLib.Navigation.ViewModelLocator.HandleLoadedProperty">
            <summary>
            Allows to handle the view loaded event in the view model with ILoadedEventlistener contract.
            </summary>
        </member>
    </members>
</doc>
