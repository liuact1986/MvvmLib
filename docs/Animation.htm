<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="en">
<!--<![endif]-->
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>MvvmLib.Animation.Wpf - MvvmLib Documentation</title>
    <link rel="shortcut icon" href="favicon.ico">
    <link rel="stylesheet" href="css/theme.css" type="text/css" />
    <link rel="stylesheet" href="css/theme_colors.css" type="text/css" />
    <link rel="stylesheet" href="css/styles/vs.css">
    <link rel="stylesheet" href="css/font-awesome.4.5.0.min.css">
</head>
<body role="document">
    <div class="grid-for-nav">
        <nav data-toggle="nav-shift" class="nav-side stickynav">
            <div class="side-nav-search">
                <a href="index.htm"><i class="fa fa-home"></i> MvvmLib Documentation</a>
                <div role="search">
                    <form id="search-form" class="form" action="Docnet_search.htm" method="get">
                        <input type="text" name="q" placeholder="Search docs" />
                    </form>
                </div>
            </div>
            <div class="menu menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
<ul>
<li class="tocentry"><a href="index.htm">Home</a>
</li>

<li class="tocentry"><a href="Mvvm.htm">MvvmLib.Core</a>
</li>
<li class="tocentry"><a href="DI.htm">MvvmLib.IoC</a>
</li>
<li class="tocentry"><a href="Navigation.htm">MvvmLib.Wpf</a>
</li>
<li class="tocentry"><a href="Navigation_Uwp.htm">MvvmLib.Windows</a>
</li>
<li class="tocentry"><a href="Navigation_XF.htm">MvvmLib.XF</a>
</li>
<li class="tocentry current"><a class="current" href="Animation.htm">MvvmLib.Animation.Wpf</a>
<ul class="currentrelative">
<li class="tocentry"><a href="#mvvmlib.animation.wpf-wpf">MvvmLib.Animation.Wpf [wpf]</a></li>

<li class="tocentry"><a href="#animatablecontentcontrol">AnimatableContentControl</a></li>

</ul>
<li class="tocentry"><a href="Adaptive.htm">MvvmLib.Adaptive.Wpf</a>
</li>
<li class="tocentry"><a href="Adaptive_Uwp.htm">MvvmLib.Adaptive.Windows</a>
</li>
<li class="tocentry"><a href="LICENSE.htm">LICENSE</a>
</li>
</ul>
				<div class="toc-footer">
					<span class="text-small">
						<hr/>
						<a href="https://github.com/FransBouma/DocNet" target="_blank">Made with <i class="fa fa-github"></i> DocNet</a>
					</span>
				</div>	
			</div>
            &nbsp;
        </nav>
        <section data-toggle="nav-shift" class="nav-content-wrap">
            <nav class="nav-top" role="navigation" aria-label="top navigation">
                <i data-toggle="nav-top" class="fa fa-bars"></i>
                <a href="index.htm">MvvmLib Documentation</a>
            </nav>
            <div class="nav-content">
                <div role="navigation" aria-label="breadcrumbs navigation">
                    <div class="breadcrumbs">
<ul><li><a href="index.htm">Home</a></li> / <li><a href="Animation.htm">MvvmLib.Animation.Wpf</a></li></ul>
					
                    </div>
                    <hr />
                </div>
                <div role="main">
                    <div class="section">
<h2 id="mvvmlib.animation.wpf-wpf">MvvmLib.Animation.Wpf [wpf]<a class="headerlink" href="#mvvmlib.animation.wpf-wpf" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<ul>
<li><strong>AnimatableContentControl</strong> and <strong>animation</strong> classes.</li>
</ul>
<h2 id="animatablecontentcontrol">AnimatableContentControl<a class="headerlink" href="#animatablecontentcontrol" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>Add the namespace to the view</p>
<pre class="nocode">xmlns:nav=&quot;http://mvvmlib.com/&quot;
</pre><p>Add the control and bind dependency properties</p>
<pre><code class="xml">&lt;nav:AnimatableContentControl nav:RegionManager.ContentRegionName=&quot;AnimationSample&quot; 
                              EntranceAnimation=&quot;{Binding EntranceNavAnimation}&quot; 
                              ExitAnimation=&quot;{Binding ExitNavAnimation}&quot;
                              Simultaneous=&quot;{Binding NavSimultaneous}&quot;
                              IsCancelled=&quot;{Binding IsCancelled}&quot;
                              Grid.Row=&quot;1&quot;/&gt;
</code></pre>

<p>Create animations and bind to control</p>
<pre><code class="cs">public class MainWindowViewModel : BindableBase
{
    private IContentAnimation entranceNavAnimation;
    public IContentAnimation EntranceNavAnimation
    {
        get { return entranceNavAnimation; }
        set { SetProperty(ref entranceNavAnimation, value); }
    }

    private IContentAnimation exitNavAnimation;
    public IContentAnimation ExitNavAnimation
    {
        get { return exitNavAnimation; }
        set { SetProperty(ref exitNavAnimation, value); }
    }

    private bool navSimultaneous;
    public bool NavSimultaneous
    {
        get { return navSimultaneous; }
        set { SetProperty(ref navSimultaneous , value); }
    }

    private bool isCancelled;
    public bool IsCancelled
    {
        get { return isCancelled; }
        set { SetProperty(ref isCancelled, value); }
    }

    public ICommand GoViewACommand { get; }
    public ICommand CancelAnimationsCommand { get; }

    public MainWindowViewModel(IRegionNavigationService regionNavigationService)
    {
        var scaleEntranceAnimation = new ScaleAnimation
        {
            From = 0,
            To = 1,
            RenderTransformOrigin = new Point(0.5, 0.5),
            EasingFunction = new ExponentialEase { EasingMode = EasingMode.EaseInOut }
        };
        var scaleExitAnimation = new ScaleAnimation
        {
            From = 1,
            To = 0,
            RenderTransformOrigin = new Point(0.5, 0.5),
            EasingFunction = new ExponentialEase { EasingMode = EasingMode.EaseInOut }
        };

        EntranceNavAnimation = scaleEntranceAnimation;
        ExitNavAnimation = scaleExitAnimation;

        var contentRegion = regionNavigationService.GetContentRegion(&quot;AnimationSample&quot;);

        GoViewACommand = new RelayCommand(async () =&gt;
        {
            await contentRegion.NavigateAsync(typeof(ViewA));
        });

        CancelAnimationsCommand = new RelayCommand(() =&gt; IsCancelled = true);
    }
}
</code></pre>

<p>Animation classes awailables:</p>
<ul>
<li><strong>OpacityAnimation</strong></li>
<li><strong>TranslateAnimation</strong></li>
<li><strong>SkewAnimation</strong></li>
<li><strong>ScaleAnimation</strong></li>
<li><strong>RotateAnimation</strong></li>
<li><strong>FxCornerEntranceAnimation</strong> and <strong>FxCornerExitAnimation</strong></li>
<li><strong>FallEntranceAnimation</strong> and <strong>FallExitAnimation</strong></li>
<li><strong>FxVscaleEntranceAnimation</strong> and <strong>FxVscaleExitAnimation</strong></li>
</ul>
<p>Create a custom animation class:</p>
<pre><code class="cs">// 1. inherit from ContentAnimationBase or TransformAnimationBase
public class MyAnimation : TransformAnimationBase
{
    // 2. implement, override the base class
    protected override AnimationTimeline[] CreateAnimations()
    {
        // ...
    }

    protected override void SetTargetProperty(AnimationTimeline animation, int index)
    {
        throw new NotImplementedException();
    }
}
</code></pre>

<p>Example with the OpacityAnimation class:</p>
<pre><code class="cs">public class OpacityAnimation : ContentAnimationBase
{
    protected override double DefaultFrom =&gt; 0;
    protected override double DefaultTo =&gt; 1;

    protected override void CheckValues()
    {
        if (From &lt; 0 || From &gt; 1)
            throw new ArgumentException(&quot;Value between 0 and 1 for an opacity animation&quot;);
        if (To &lt; 0 || To &gt; 1)
            throw new ArgumentException(&quot;Value between 0 and 1 for an opacity animation&quot;);
    }

    protected override void SetTargetProperty(AnimationTimeline animation, int index)
    {
        Storyboard.SetTargetProperty(animation, new PropertyPath(&quot;(Control.Opacity)&quot;));
    }
}
</code></pre>


                    </div>
                </div>
                <footer>
                    <hr />
                    <div role="contentinfo">
MvvmLib Documentation. &copy;2019. <a href='https://github.com/romagny13/MvvmLib' target='_blank'>GitHub</a> | <a href='https://www.nuget.org/profiles/romagny13' target='_blank'>NuGet</a>.
                    </div>
                </footer>
            </div>
        </section>
    </div>
    <script src="js/jquery-2.1.1.min.js"></script>
    <script src="js/modernizr-2.8.3.min.js"></script>
    <script src="js/highlight.pack.js"></script>
    <script src="js/theme.js"></script>

</body>
</html>
